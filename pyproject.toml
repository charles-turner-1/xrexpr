[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >= 61.0.0",
  "versioneer[toml]==0.29",
]

[project]
name = "xrexpr"
description = "Rewrite chained expressions on xarray datasets to improve performance"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "Charle Turner", email = "charles.turner@anu.edu.au"},
]
maintainers = [
  { name = "Charle Turner", email = "charles.turner@anu.edu.au"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
license = {text = "Apache Software License 2.0"}
dependencies = [
   "libcst",
   "xarray"
]

dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy",  # linting
    "pytest",  # testing
    "ruff",  # linting
    "xarray",
]

[project.scripts]

[project.urls]

bugs = "https://github.com/charles-turner-1/xrexpr/issues"
changelog = "https://github.com/charles-turner-1/xrexpr/blob/main/CHANGELOG.md"
homepage = "https://github.com/charles-turner-1/xrexpr"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]


# Mypy
# ----

[tool.mypy]
files = "src"
exclude = [
  "src/xrexpr/_version.py",
]

# Use strict defaults
strict = true
warn_unreachable = true
# warn_unused_ignores = true
warn_no_return = true

allow_subclassing_any = true

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/xrexpr/_version.py"
versionfile_build = "xrexpr/_version.py"
tag_prefix = "v"
parentdir_prefix = "xrexpr-"

[tool.coverage.run]
omit = [
    "*/_version.py",
    "*/data/__init__.py",
]

[tool.ruff]
target-version = "py310"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "versioneer.py",
    "_version.py",
    "tests"
]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
ignore = [
    "E402",
    "E501",
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.isort]
known-first-party = ["xrexpr"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"

[tool.pixi.workspace]
channels = ["conda-forge", "main", "r", "msys2"]
name = "xrexpr"
platforms = ["osx-arm64", "linux-64", "win-64"]

[tool.pixi.tasks]

[tool.pixi.dependencies]
python = ">=3.10"
xarray = "*"
libcst = "*"
versioneer = ">=0.29,<0.30"

[tool.pixi.feature.dev.pypi-dependencies]
xrexpr = {editable = true, path = "."}

[tool.pixi.environments]
dev = { features = ["dev"], solve-group = "default" }
test-py310 = { features = ["py310", "dev"] }
test-py311 = { features = ["py311", "dev"] }
test-py312 = { features = ["py312", "dev"] }
test-py313 = { features = ["py313", "dev"] }

[tool.pixi.feature.dev.dependencies]
pytest = ">=8.4.2,<9"
coverage = ">=7.10.6,<8"

[tool.pixi.feature.dev.tasks]
test = {cmd = "pytest tests", description = "Run tests"}
test-cov = {cmd = "coverage run -m --source=xrexpr pytest tests && coverage xml", description = "Run tests with coverage and generate xml report"}

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"
